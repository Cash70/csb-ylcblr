{"version":3,"sources":["App.js","index.js"],"names":["mqtt","require","options","protocol","username","password","keepalive","clientId","Math","random","toString","substr","client","connect","subscribe","console","log","App","note","_useState","useState","_jsxs","Fragment","children","_jsx","_useState2","_slicedToArray","msg","setMsg","on","topic","message","jsonval","JSON","parse","Hz","className","rootElement","document","getElementById","createRoot","render","StrictMode"],"mappings":"yLAGIA,EAAOC,EAAQ,IACfC,EAAU,CACZC,SAAU,MACVC,SAAU,GACVC,SAAU,GACVC,UAAW,GAEXC,SAAU,UAAYC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,IAGzDC,EAASZ,EAAKa,QAAQ,iCAAkCX,GAE5DU,EAAOE,UAAU,mBACjBC,QAAQC,IAAI,sBAkCGC,MAhCf,WACE,IAOIC,EAPJC,EAAsBC,mBACpBC,eAACC,WAAQ,CAAAC,SAAA,CACN,IACDC,cAAA,MAAAD,SAAI,QAAS,QAEhBE,EAAAC,YAAAP,EAAA,GALMQ,EAAGF,EAAA,GAAEG,EAAMH,EAAA,GAoBlB,OAZAb,EAAOiB,GAAG,WAAW,SAAUC,EAAOC,GACpCb,EAAOa,EAAQrB,WAEf,IAAIsB,EAAUC,KAAKC,MAAMhB,GAEzBH,QAAQC,IAAIgB,EAAQG,GAAGzB,YACvBkB,EAAOI,EAAQG,GAAGzB,WAEpB,IAKEW,eAAA,OAAKe,UAAU,MAAKb,SAAA,CACjB,IACDF,eAAA,UAAQe,UAAU,aAAYb,SAAA,CAC5BC,cAAA,MAAAD,SAAI,eACJF,eAAA,KAAAE,SAAA,CAAG,sBAAoBI,EAAI,aAInC,EC3CMU,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACHjB,cAACkB,aAAU,CAAAnB,SACTC,cAACP,EAAG,M","file":"static/js/main.77203a71.chunk.js","sourcesContent":["import \"./styles.css\";\nimport React, { useState, Fragment } from \"react\";\n\nvar mqtt = require(\"mqtt\");\nvar options = {\n  protocol: \"wss\",\n  username: \"\",\n  password: \"\",\n  keepalive: 20, // clientId uniquely identifies client\n  // choose any string you wish\n  clientId: \"mqttjs_\" + Math.random().toString(16).substr(2, 8)\n};\n\nvar client = mqtt.connect(\"mqtt://test.mosquitto.org:8081\", options);\n\nclient.subscribe(\"device/50HzData\");\nconsole.log(\"Client subscribed \");\n\nfunction App() {\n  const [msg, setMsg] = useState(\n    <Fragment>\n      {\" \"}\n      <em>...</em>{\" \"}\n    </Fragment>\n  );\n\n  var note;\n  client.on(\"message\", function (topic, message) {\n    note = message.toString(); // Updates React state with message\n\n    var jsonval = JSON.parse(note);\n\n    console.log(jsonval.Hz.toString());\n    setMsg(jsonval.Hz.toString());\n    //client.end();\n  });\n  // Sets default React state\n  //\n\n  return (\n    <div className=\"App\">\n      {\" \"}\n      <header className=\"App-header\">\n        <h1>Grid Watch</h1>\n        <p>Grid Frequency is: {msg}Hz</p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}